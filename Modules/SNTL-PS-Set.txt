Function Set-RunOnceScript {
    <#
	.SYNOPSIS
        Sets a script to run on next reboot.
    .PARAMETER Label
        Name the registry key
    .PARAMETER Script
        The path to the script to run.
	.EXAMPLE
		Set-RunOnceScript -Label "Pass2" -Script "C:\IT\Script2.ps1"
	#>
    
    Param (
        [Parameter(Mandatory = $True)]
        [String]$Label,

        [Parameter(Mandatory = $True)]
        [String]$Script
    )

    Begin {
        Write-Host "Setting run-once script."
        $RunOnceValue = 'PowerShell.exe -ExecutionPolicy Bypass -File "' + $Script + '"'
    }

    Process {
        Set-ItemProperty 'HKLM:\Software\Microsoft\Windows\CurrentVersion\RunOnce' -Name $Label -Value $RunOnceValue
        Write-Host "Run-once script set"
    }
}

Function Set-AutoLogon {
    <#
	.SYNOPSIS
        Sets an admin account to autologon after the next reboot.
    .PARAMETER DefaultUsername
        The temporary local admin username
    .PARAMETER DefaultPassword
        The temporary local admin password
	.EXAMPLE
		Set-AutoLogon -DefaultUsername "TempUser" -DefaultPassword "TempPass"
	#>

    Param (
        [Parameter(Mandatory = $False)]
        [String] $DefaultUsername,

        [Parameter(Mandatory = $False)]
        [String] $DefaultPassword
    )
    
    Begin {
        Write-Host "Set autologon"
        #Registry path declaration
        $RegPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
    }

    Process {
        #setting registry values
        Set-ItemProperty $RegPath "AutoAdminLogon" -Value "1" -type String
        Set-ItemProperty $RegPath "DefaultUsername" -Value $DefaultUsername -type String
        Set-ItemProperty $RegPath "DefaultPassword" -Value $DefaultPassword -type String
        Set-ItemProperty $RegPath "AutoLogonCount" -Value "1" -type DWord

        Write-Host "End of Set autologon"
    }
}

Function Set-DailyReboot {
    <#
	.SYNOPSIS
		Creates a scheduled task to restart the computer daily at 3am, if no one is using the computer.
		Helpful for maintaining updated and stability.
    .EXAMPLE
        Set-DailyReboot
     #>

    Begin {
        Write-Host "Schedule Daily Restart"
        $Action = New-ScheduledTaskAction -Execute 'shutdown.exe' -Argument '-f -r -t 0'
        $Trigger = New-ScheduledTaskTrigger -Daily -At 3am
        $Idle = New-ScheduledTaskSettingsSet -RunOnlyIfIdle -IdleDuration 00:30:00 -IdleWaitTimeout 02:00:00
        $User = "NT AUTHORITY\SYSTEM"
    }

    Process {
        Register-ScheduledTask -Action $action -Trigger $trigger -User $User -Settings $Idle -TaskName "Daily Restart" -Description "Daily restart" -Force | Out-Null
        $NewDate = (Get-ScheduledTask -TaskName "Daily Restart").Triggers.StartBoundary.subString(0, 16)
        Write-Host "The next scheduled 'Daily Restart' task will happen at $([Datetime]::ParseExact($NewDate, 'yyyy-MM-ddTHH:mm', $null))"
    }
}

Function Set-GMTTime {
    <#
	.SYNOPSIS
		Sets the system timezone to GMT
    .EXAMPLE
        Set-GMTTime
     #>
    
    Process {
        Write-Host "Setting timezone to GMT"
        Set-TimeZone -Name "GMT Standard Time"
    }

    End {
        net start W32Time
        W32tm /resync /force
    }
}

Function Set-NumLock {
    <#
	.SYNOPSIS
		Sets numlock to on by default
    .EXAMPLE
        Set-NumLock
     #>

    Process {
        Write-Host "Setting Numlock as default"
        Set-ItemProperty -Path 'Registry::HKU\.DEFAULT\Control Panel\Keyboard' -Name "InitialKeyboardIndicators" -Value "2" -Force -PassThru
    }
}